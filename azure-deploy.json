{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "Location": {
      "type": "string",
      "defaultValue": "westus",
      "metadata": {
        "description": "Location where you want to deploy resources"
      }
    },
    "Environment": {
      "type": "string",
      "defaultValue": "dev",
      "metadata": {
        "description": "The environment label for this PCF deployment. Defaults to 'dev'."
      }
    },
    "OpsManVHDStorageAccount": {
      "type": "string",
      "metadata": {
        "description": "The Storage Account which holds the PCF Operations Manager VHD."
      }
    },
    "BlobStorageEndpoint": {
      "type": "string",
      "defaultValue": "blob.core.windows.net",
      "metadata": {
        "description": "The Azure Blob Storage endpoint to use. Custom domains are supported only in conjunction with Azure CDN due to HTTPS requirements. See: http://bit.ly/2jOdAdb"
      }
    },
    "BlobStorageContainer": {
      "type": "string",
      "defaultValue": "opsman-image",
      "metadata": {
        "description": "The Azure Blob Storage Container name of the Operations Manager image. Defaults to \"opsman-image\"."
      }
    },
    "AdminSSHKey": {
      "type": "string",
      "metadata": {
        "description": "Admin user's public SSH key for SSH-based access."
      }
    }
  },
  "variables": {
    "opsManVMName": "PCFOpsManager",
    "pcfVNetID": "[resourceId('Microsoft.Network/virtualNetworks', 'PCF')]",
    "mgmtSubnetRef": "[concat(variables('pcfVNetID'),'/subnets/', 'Management')]",
    "lbName": "ERT-LB",
    "lbID": "[resourceId('Microsoft.Network/loadBalancers', variables('lbName'))]",
    "frontEndIPConfigID": "[concat(variables('lbID'),'/frontendIPConfigurations/ERTFrontEndIP')]",
    "ertBackEndConfig": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/backendAddressPools', '/ERTBackEndConfiguration')]",
    "ertPublicIPConfig": "[resourceId('Microsoft.Network/publicIPAddresses', 'ERTPublicIP')]",
    "probeID": "[concat(resourceId('Microsoft.Network/loadBalancers', variables('lbName')), '/probes', '/HTTP')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[concat('pcfblobs', uniqueString(subscription().id))]",
      "apiVersion": "2017-06-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "kind": "Storage",
      "sku": {
        "name": "Standard_LRS"
      }
    },
    {
      "name": "AllowWebAndSSH",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-03-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "properties": {
        "securityRules": [
          {
            "properties": {
              "description": "Allow Inbound HTTP",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            },
            "name": "Allow-HTTP"
          },
          {
            "properties": {
              "description": "Allow Inbound HTTPS",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            },
            "name": "Allow-HTTPS"
          },
          {
            "properties": {
              "description": "Allow Inbound SSH",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1300,
              "direction": "Inbound"
            },
            "name": "Allow-SSH"
          }
        ]
      }
    },
    {
      "name": "AllowAppTraffic",
      "type": "Microsoft.Network/networkSecurityGroups",
      "apiVersion": "2017-03-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "properties": {
        "securityRules": [
          {
            "properties": {
              "description": "Allow Inbound HTTP",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "80",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1000,
              "direction": "Inbound"
            },
            "name": "Allow-HTTP"
          },
          {
            "properties": {
              "description": "Allow Inbound HTTPS",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "443",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1100,
              "direction": "Inbound"
            },
            "name": "Allow-HTTPS"
          },
          {
            "properties": {
              "description": "Allow Inbound CF SSH",
              "protocol": "TCP",
              "sourcePortRange": "*",
              "destinationPortRange": "2222",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 1200,
              "direction": "Inbound"
            },
            "name": "Allow-CF-SSH"
          }
        ]
      }
    },
    {
      "name": "PCF",
      "type": "Microsoft.Network/virtualNetworks",
      "apiVersion": "2017-03-01",
      "location": "[parameters('Location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups', '/', 'AllowWebAndSSH')]"
      ],
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "10.0.0.0/16"
          ]
        },
        "subnets": [
          {
            "name": "Management",
            "properties": {
              "addressPrefix": "10.0.4.0/22",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowWebAndSSH')]"
              }
            }
          },
          {
            "name": "Services",
            "properties": {
              "addressPrefix": "10.0.8.0/22",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowAppTraffic')]"
              }
            }
          },
          {
            "name": "Deployment",
            "properties": {
              "addressPrefix": "10.0.12.0/22",
              "networkSecurityGroup": {
                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowAppTraffic')]"
              }
            }
          }
        ]
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "OpsManPublicIP",
      "apiVersion": "2017-03-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Dynamic",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[concat('pcf-opsman-',uniquestring(resourceGroup().id, deployment().name))]"
        }
      }
    },
    {
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "ERTPublicIP",
      "apiVersion": "2017-03-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "properties": {
        "publicIPAllocationMethod": "Static",
        "publicIPAddressVersion": "IPv4",
        "dnsSettings": {
          "domainNameLabel": "[concat('pcf-ert-',uniquestring(resourceGroup().id, deployment().name))]"
        }
      }
    },
    {
      "name": "[variables('lbName')]",
      "type": "Microsoft.Network/loadBalancers",
      "apiVersion": "2017-03-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "dependsOn": [
        "[variables('ertPublicIPConfig')]"
      ],
      "properties": {
        "frontendIPConfigurations": [
          {
            "name": "ERTFrontEndIP",
            "properties": {
              "publicIPAddress": {
                "id": "[variables('ertPublicIPConfig')]"
              }
            }
          }
        ],
        "backendAddressPools": [
          {
            "name": "ERTBackEndConfiguration"
          }
        ],
        "loadBalancingRules": [
          {
            "name": "HTTPS",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('ertBackEndConfig')]"
              },
              "probe": {
                "id": "[variables('probeID')]"
              },
              "protocol": "TCP",
              "loadDistribution": "SourceIP",
              "frontendPort": 443,
              "backendPort": 443,
              "idleTimeoutInMinutes": 4,
              "enableFloatingIP": false
            }
          },
          {
            "name": "HTTP",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('ertBackEndConfig')]"
              },
              "protocol": "TCP",
              "loadDistribution": "SourceIP",
              "frontendPort": 80,
              "backendPort": 80,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('probeID')]"
              }
            }
          },
          {
            "name": "DiegoSSH",
            "properties": {
              "frontendIPConfiguration": {
                "id": "[variables('frontEndIPConfigID')]"
              },
              "backendAddressPool": {
                "id": "[variables('ertBackEndConfig')]"
              },
              "protocol": "TCP",
              "loadDistribution": "SourceIP",
              "frontendPort": 2222,
              "backendPort": 2222,
              "enableFloatingIP": false,
              "idleTimeoutInMinutes": 4,
              "probe": {
                "id": "[variables('probeID')]"
              }
            }
          }
        ],
        "probes": [
          {
            "name": "HTTP",
            "properties": {
              "protocol": "Http",
              "port": 8080,
              "intervalInSeconds": 5,
              "numberOfProbes": 2,
              "requestPath": "/health"
            }
          }
        ]
      }
    },
    {
      "name": "OpsManNic",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2017-03-01",
      "location": "[parameters('location')]",
      "tags": {
        "Environment": "[parameters('environment')]"
      },
      "dependsOn": [
        "[concat('Microsoft.Network/networkSecurityGroups/', 'AllowWebAndSSH')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', 'AllowWebAndSSH')]"
        },
        "ipConfigurations": [
          {
            "name": "OpsManIPConfig",
            "properties": {
              "privateIPAllocationMethod": "Static",
              "privateIPAddress": "10.0.4.4",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses','OpsManPublicIP')]"
              },
              "subnet": {
                "id": "[reference(concat('Microsoft.Network/virtualNetworks/', 'PCF')).subnets[0].id]"
              }
            }
          }
        ]
      }
    },
    {
      "apiversion": "2017-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('opsManVMName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/','OpsManNic')]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "Standard_DS2_v2"
        },
        "osProfile": {
          "computerName": "pcfopsman",
          "adminUsername": "ubuntu",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "path": "/home/ubuntu/.ssh/authorized_keys",
                  "keyData": "[parameters('AdminSSHKey')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "osDisk": {
            "osType": "Linux",
            "name": "osdisk",
            "image": {
              "uri": "[concat('https://',parameters('OpsManVHDStorageAccount'),'.',parameters('BlobStorageEndpoint'),'/opsman-image/image.vhd')]"
            },
            "vhd": {
              "uri": "[concat('http://',parameters('OpsManVHDStorageAccount'),'.',parameters('BlobStorageEndpoint'),'/',parameters('BlobStorageContainer'),'/',variables('opsManVMName'),'-osdisk.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage",
            "diskSizeGB": "120"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces','OpsManNic')]"
            }
          ]
        }
      }
    }
  ]
}
